//
//  DetailPresenter.swift
//  VideoPlayerApp
//
//  Created by bora ate≈ü on 25.04.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentFetchedMovies(movieList : [Detail.MovieList.ViewModel.DisplayedMovies], response: Detail.MovieList.Response)
}

class DetailPresenter: DetailPresentationLogic {
  
    weak var viewController: DetailDisplayLogic?

    func presentFetchedMovies(movieList : [Detail.MovieList.ViewModel.DisplayedMovies], response: Detail.MovieList.Response) {

        var displayedMovies : [Detail.MovieList.ViewModel.DisplayedMovies] = []
        displayedMovies = movieList
        
        for movie in response.movies {
            guard let title = movie.originalTitle, let posterPath = movie.posterPath, let backPath = movie.backdropPath else { return }
            
            let displayedMovie = Detail.MovieList.ViewModel.DisplayedMovies(title: title, posterPath: posterPath, backdropPath: backPath)
                        
            displayedMovies.append(displayedMovie)
        }
        
        let viewModel = Detail.MovieList.ViewModel(displayedMovieList: displayedMovies)
        viewController?.displayMovies(viewModel: viewModel)
        DetailViewController.movieList = viewModel.displayedMovieList
        
    }
    
    
}
